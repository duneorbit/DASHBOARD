<?xml version="1.0" encoding="UTF-8" standalone="yes"?><timeLines spintName="Donegal 5"><timeLineOwners owner="v_dashm"><reviewTimeLines lastActivityDate="2017-05-16T00:00:00Z" reviewNum="1" summary="FAB-3267: Domain instance: NOT_REQUIRED is added to EligibilityResultType"><timeline><timeLineEntries revision="1"><files fileName="/trunk/projects/absence-domain/sql/absence/Absence_Referential_Data.xls"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/Db2/udb/fullscripts/absence.domaininstances.db2.sql"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/Oracle/fullscripts/absence.domaininstances.ora.sql"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/SqlServer/fullscripts/absence.domaininstances.sqlserver.sql"/><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/leaverequest/enums/EligibilityResultType.java"/></timeLineEntries></timeline></reviewTimeLines><reviewTimeLines lastActivityDate="2017-05-16T00:00:00Z" reviewNum="3" summary="FAB-3745: Sub-domain: INDIVIDUAL_RULE_ELIGIBILITY_RESULT_TYPE added to EligibilityResultType"><timeline><timeLineEntries revision="1"><files fileName="/trunk/projects/absence-domain/sql/absence/Absence_Referential_Data.xls"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/Db2/udb/fullscripts/absence.subsets.db2.sql"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/Oracle/fullscripts/absence.subsets.ora.sql"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/SqlServer/fullscripts/absence.subsets.sqlserver.sql"/><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/leaverequest/enums/EligibilityResultType.java"/></timeLineEntries></timeline></reviewTimeLines><reviewTimeLines lastActivityDate="2017-05-17T00:00:00Z" reviewNum="2" summary="FAB-3797: Update SelectedLeavePlan entity with EligibilityEvaluationTimestamp"><timeline><timeLineEntries revision="1"><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/Db2/udb/sql/SelectedLeavePlan_db2.sql"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/Db2/udb/sql/SelectedLeavePlan_db2.create.view.sql"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/Db2/udb/sql/SelectedLeavePlan_db2_HISTORY.sql"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/Db2/udb/sql/SelectedLeavePlan_db2_HISTTRIGGER.sql"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/Oracle/sql/SelectedLeavePlan_ora.sql"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/Oracle/sql/SelectedLeavePlan_ora.create.view.sql"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/Oracle/sql/SelectedLeavePlan_ora_HISTORY.sql"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/Oracle/sql/SelectedLeavePlan_ora_HISTTRIGGER.sql"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/SqlServer/sql/SelectedLeavePlan_ssql.sql"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/SqlServer/sql/SelectedLeavePlan_ssql.create.view.sql"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/SqlServer/sql/SelectedLeavePlan_ssql_HISTORY.sql"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/SqlServer/sql/SelectedLeavePlan_ssql_HISTTRIGGER.sql"/><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/leaverequest/SelectedLeavePlan.java"/></timeLineEntries><timeLineEntries revision="2"><files fileName="/trunk/projects/absence-domain/src/test/java/com/fineos/absence/leaverequest/SelectedLeavePlanBuilder.java"/></timeLineEntries></timeline></reviewTimeLines></timeLineOwners><timeLineOwners owner="v_jaybhays"><reviewTimeLines lastActivityDate="2017-05-12T00:00:00Z" reviewNum="3" summary="FAB-2685 - Updated EmployeeData entity with \'managerSSN\' and \'employeeRecordStatus\' fields"><timeline><timeLineEntries revision="1"><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/Db2/udb/sql/EmployeeData_db2.sql"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/Db2/udb/sql/EmployeeData_db2.create.view.sql"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/Db2/udb/sql/EmployeeData_db2_HISTORY.sql"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/Db2/udb/sql/EmployeeData_db2_HISTTRIGGER.sql"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/Oracle/sql/EmployeeData_ora.sql"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/Oracle/sql/EmployeeData_ora.create.view.sql"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/Oracle/sql/EmployeeData_ora_HISTORY.sql"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/Oracle/sql/EmployeeData_ora_HISTTRIGGER.sql"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/SqlServer/sql/EmployeeData_ssql.sql"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/SqlServer/sql/EmployeeData_ssql.create.view.sql"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/SqlServer/sql/EmployeeData_ssql_HISTORY.sql"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/SqlServer/sql/EmployeeData_ssql_HISTTRIGGER.sql"/><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/fileupload/employee/EmployeeData.java"><comments author="Jose Martinez" comment="SSN is not unique. Should we add the date of birth of the manager?"/><comments author="Jose Martinez" comment="You have to modify all csv we have in test resources"/><comments author="Sachin Jaybhay" comment="Manager Date Of Birth Added"/><comments author="Sachin Jaybhay" comment="Modified all CSV for managerSSN and managerDateOfBirth"/><comments author="Jose Martinez" comment="You have to modify all csv we have in test resources"/><comments author="Sachin Jaybhay" comment="Since this is a status flag used internally. Not set from .csv. So no need to update csv ?"/><comments author="Mahendra Dash" comment="Should this seter be protected?"/><comments author="Sachin Jaybhay" comment="All other field setters are public(e.d. employeeSSN, spouceSSN etc). So to be consistent have kept it public. I guess, since it will be accessed by the Batch process to read data from CSV and set data, which is in different module, it will have to be public."/><comments author="Mahendra Dash" comment="Instead of package level, should it be protected?"/><comments author="Sachin Jaybhay" comment="The services which will set this status are and the entity itself are in same package. Hence kept package level access"/><comments author="Mahendra Dash" comment="However, I think these seters are generaly kept as protected to make it accesible by the exteneded entity.&#xA;If this entity is not expected to be extended in future, then keeping it at default level is ok."/></files></timeLineEntries><timeLineEntries revision="2"><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/Db2/udb/sql/EmployeeData_db2.sql"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/Db2/udb/sql/EmployeeData_db2.create.view.sql"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/Db2/udb/sql/EmployeeData_db2_HISTORY.sql"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/Db2/udb/sql/EmployeeData_db2_HISTTRIGGER.sql"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/Oracle/sql/EmployeeData_ora.sql"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/Oracle/sql/EmployeeData_ora.create.view.sql"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/Oracle/sql/EmployeeData_ora_HISTORY.sql"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/Oracle/sql/EmployeeData_ora_HISTTRIGGER.sql"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/SqlServer/sql/EmployeeData_ssql.sql"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/SqlServer/sql/EmployeeData_ssql.create.view.sql"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/SqlServer/sql/EmployeeData_ssql_HISTORY.sql"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/SqlServer/sql/EmployeeData_ssql_HISTTRIGGER.sql"/><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/fileupload/employee/EmployeeData.java"/><files fileName="/trunk/projects/absence-domain/src/test/resources/ContactMediums_1.csv"/><files fileName="/trunk/projects/absence-domain/src/test/resources/ContactMediums_2_modify.csv"/><files fileName="/trunk/projects/absence-domain/src/test/resources/Relationship_1_NoSpouse_successful.csv"/><files fileName="/trunk/projects/absence-domain/src/test/resources/Relationship_2_addSpouse_successful.csv"/><files fileName="/trunk/projects/absence-domain/src/test/resources/Relationship_3_changeDateOfSpouse_successful.csv"/><files fileName="/trunk/projects/absence-domain/src/test/resources/Relationship_4_divorced_successful.csv"/><files fileName="/trunk/projects/absence-domain/src/test/resources/Relationship_5_removeSpouse_successful.csv"/><files fileName="/trunk/projects/absence-domain/src/test/resources/Relationship_6_addSpouse_successful.csv"/><files fileName="/trunk/projects/absence-domain/src/test/resources/Relationship_7_newSpouse_successful.csv"/><files fileName="/trunk/projects/absence-domain/src/test/resources/Test_1_successful.csv"/><files fileName="/trunk/projects/absence-domain/src/test/resources/Test_2_noemployerid.csv"/><files fileName="/trunk/projects/absence-domain/src/test/resources/Test_3_nonumberofrecords.csv"/><files fileName="/trunk/projects/absence-domain/src/test/resources/Test_4_Expected_record_different.csv"/></timeLineEntries></timeline></reviewTimeLines><reviewTimeLines lastActivityDate="2017-05-12T00:00:00Z" reviewNum="5" summary="FAB-2685 - Create new Enum Domain \'EmployeeRecordStatus\' and its instances"><timeline><timeLineEntries revision="1"><files fileName="/trunk/projects/absence-domain/sql/absence/Absence_Referential_Data.xls"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/Db2/udb/fullscripts/absence.domaininstances.db2.sql"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/Db2/udb/fullscripts/absence.enumdomains.db2.sql"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/Oracle/fullscripts/absence.domaininstances.ora.sql"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/Oracle/fullscripts/absence.enumdomains.ora.sql"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/SqlServer/fullscripts/absence.domaininstances.sqlserver.sql"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/SqlServer/fullscripts/absence.enumdomains.sqlserver.sql"/><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/fileupload/employee/enums/EmployeeRecordStatus.java"/></timeLineEntries></timeline></reviewTimeLines><reviewTimeLines lastActivityDate="2017-05-15T00:00:00Z" reviewNum="4" summary="FAB-2685 - Create new Enum Domain instance \'Pending\' for domain \'EmployeeRecordStatus\'"><timeline><timeLineEntries revision="1"><files fileName="/trunk/projects/absence-domain/sql/absence/Absence_Referential_Data.xls"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/Db2/udb/fullscripts/absence.domaininstances.db2.sql"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/Oracle/fullscripts/absence.domaininstances.ora.sql"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/SqlServer/fullscripts/absence.domaininstances.sqlserver.sql"/><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/fileupload/employee/enums/EmployeeRecordStatus.java"><comments author="Jose Martinez" comment="Currenty we have a boolean that indicates if the record has been processed or not. Are you going to change this behavior?"/><comments author="Sachin Jaybhay" comment="This has been taken care in FAB-2686 changes. Review # 71878"/></files></timeLineEntries></timeline></reviewTimeLines><reviewTimeLines lastActivityDate="2017-05-17T00:00:00Z" reviewNum="2" summary="FAB-2687 : Changes to add new Fineos Batch Process into system .i.e"><timeline><timeLineEntries revision="1"><files fileName="/trunk/projects/absence-batch/src/assembly/bin/processmanagers.sh"/><files fileName="/trunk/projects/absence-batch/src/assembly/bin/processmanagers.bat"/><files fileName="/trunk/projects/absence-batch/src/assembly/config/envs/fineosenv/processmanagers_config.xml"/><files fileName="/trunk/projects/absence-batch/src/main/java/com/fineos/absence/batch/ProcessManagersBatchProcess.java"><comments author="Gil Matias" comment="THis is not an issue just an FYI. When you are overiding you dont need to create new Javadocs linking to the parent Class. Javadocs link it by default."/></files><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/Oracle/fullscripts/absence.ora.sql"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/Oracle/fullscripts/absence.security.batch.data.ora.sql"/></timeLineEntries></timeline></reviewTimeLines><reviewTimeLines lastActivityDate="2017-05-19T00:00:00Z" reviewNum="1" summary="FAB-2686 : New Service Class for handling Employees Manager rel from File Upload batches"><timeline><timeLineEntries revision="1"><files fileName="/trunk/projects/absence-batch/src/main/java/com/fineos/absence/batch/ProcessManagersBatchProcess.java"/><files fileName="/trunk/projects/absence-batch/src/test/java/com/fineos/absence/batch/ProcessManagersBatchProcessTest.java"/><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/fileupload/employee/EmployeeDetailsPersistenceService.java"/><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/fileupload/employee/EmployeeManagerService.java"><comments author="Jose Martinez" comment="If more than 1 result we should raise an exepction. I don&amp;#39;t understand the reconciliation concept."/><comments author="Sachin Jaybhay" comment="Reconciliation is, if the business logic for linking manager is called from 3rd batch i.e Processmanagers. Since same business logic is to be called from batch2 and batch3, we have to provide a flag to indicate this. Also, if there are some validations and service is called as part of 3rd batch, we have to raise Manual Intervention task. &#xA;So here requirement is if we find more than one Manager Person with same SSN and DOB, we have to raise a Manual Intervention task."/><comments author="Jose Martinez" comment="can we use getPerson?&#xA;This method throws an chequed exception if more than one person with the same ssn and dob are found."/><comments author="Sachin Jaybhay" comment="We had decided to raise a manual intervention task if more than one manager person with same ssn and dob are found. Hence right now getPerson() not used.&#xA;We will discuss this behaviour during demo if this behaviour is to be changed, and instade of Task, we can throw error."/><comments author="Jose Martinez" comment="not clear this if/else with the same if inside."/><comments author="Sachin Jaybhay" comment="The First &amp;#39;if&amp;#39; is to check for Occupation for Manager, and Second inside &amp;#39;if&amp;#39; is to check if this is called from 3rd batch(Processmanagers) or 2nd batch(ProcessFiles).&#xA;&#xA;If occupation for Manager person not found, and this is called as part of 3rd batch, we know that Manager has no occupation for employer, and raise manual intervention task, and mark record as TO_VERIFY_MANAGER_FIX."/><comments author="Jose Martinez" comment="the two isRen... are the same, only change the message&#xA;Also, I don&amp;#39;t think occupation is null."/><comments author="Sachin Jaybhay" comment="The Occupation can be null. Since this Occupation is not of the Employee himself, but the Employees Manager. A EmployeeData has Manager SSN and DOB, we have to first validate if the Manager person alsp works for the same employer. So we have to loop through the Manager Person occupations and check if it matches the Employer for which the file is being uploaded. &#xA;&#xA;The tow isReconcialiation and different(with message), since we have to raise two seperate manual intervention tasks one for Occupation not employer not found, and second if Occupation is found but the JobEndDate is in past."/><comments author="Jose Martinez" comment="See EmployeeDetailsSearchService.findOccupation&#xA;Adapt this with isActiveOccupationOnDate"/><comments author="Sachin Jaybhay" comment="Modified EmployeeDetailsSearchService.findOccupation to use AbsenceCaseService.isActiveOccupationOnDate()"/><comments author="Jose Martinez" comment="do we need this method?"/><comments author="Sachin Jaybhay" comment="Yes. This is generic method where we pass the Person and the EmployerId, to return the Persons Occupation for the given EmployerId. Again this is not the same as Employee&amp;#39;s Occupation, here we are trying to find occupation of Manager for employee."/><comments author="Jose Martinez" comment="??? You already have a occupation&#xA;&#xA;final Employment employment = (Employment) occupation.getOccupationExtensionBase().get(0);"/><comments author="Sachin Jaybhay" comment="The Occupation that we already have in EmployeeRecord is for the Employee, where as this piece of code is called for the Manager Persons occupation which does not exist in EMployeeRecord. &#xA;This is called only if the &amp;quot;Manager&amp;quot; Person has Occupation for the given Employer. So Occupation is already there. If now occupation, this returns null"/><comments author="Jose Martinez" comment="do we need this method?"/><comments author="Sachin Jaybhay" comment="This method can be avoided with change to some logic and improve performance. This can be taken up in FAB-3893"/><comments author="Jose Martinez" comment="Again, reconciliation"/><comments author="Sachin Jaybhay" comment="Reconciliation is just flag indicating if this is called from batch 2 i.e. ProcessFiles or batch 3 i.e. ProcessManagers. &#xA;While linking manager to employee, if validation checks do not pass, Manager will be null, and if this is called from batch 2(Reconciliation = false), we have to mark record as pending_manager_fix"/><comments author="Jose Martinez" comment="Can we avoid the if using maps as a decission? See&#xA;https://fineos.sharepoint.com/sites/fas/absence/scrum/_layouts/15/WopiFrame.aspx?sourcedoc={215f3d11-55a9-4605-b1e4-fefff5dc9ef3}&amp;amp;action=edit&amp;amp;wd=target%28%2F%2FTeam%20Yuma.one%7Cb89812fd-985c-40d1-ad26-f362c8a9c449%2FEclipse%20Formatter%7C1317abdf-9526-4a60-b2b1-77912368d691%2F%29"/><comments author="Sachin Jaybhay" comment="If possible, this can be taken up as part of FAB-3893"/><comments author="Jose Martinez" comment="to many ifs"/><comments author="Sachin Jaybhay" comment="it has only 3 different conditions which we need to hande, so we have to use it."/></files><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/fileupload/employee/PostProcessEmployeeDataEntity.java"><comments author="Jose Martinez" comment="we should remove this field"/><comments author="Sachin Jaybhay" comment="This field is removed."/></files><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/fileupload/employee/ProcessPendingManagerService.java"/><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/fileupload/employee/StoreFineosEmployeeDetailsService.java"><comments author="Jose Martinez" comment="Why?"/><comments author="Sachin Jaybhay" comment="Removed. its EmployeeManagerService which will change the status"/><comments author="Jose Martinez" comment="Why we update the record? Should we only update the manager?"/><comments author="Sachin Jaybhay" comment="Agree. Removed"/><comments author="Jose Martinez" comment="Who changes this status? Shouldn&amp;#39;t be process manager?"/><comments author="Sachin Jaybhay" comment="Agree. process manager will change the status. Removed."/><comments author="Jose Martinez" comment="This query and the above only differ in the value of the enum. Can we extract the common things?"/><comments author="Sachin Jaybhay" comment="Extracted to common method readStagingRecordsForStatus, and calling from both places"/></files><files fileName="/trunk/projects/absence-domain/src/test/java/com/fineos/absence/fileupload/employee/EmployeeDetailsPersistenceServiceTest.java"/><files fileName="/trunk/projects/absence-domain/src/test/java/com/fineos/absence/fileupload/employee/EmployeeManagerServiceTest.java"/><files fileName="/trunk/projects/absence-domain/src/test/java/com/fineos/absence/fileupload/employee/StoreFineosEmployeeDetailsServiceTest.java"/><files fileName="/trunk/projects/absence-webapp/src/main/java/com/fineos/absence/fileupload/employee/UploadEmployeeFileServlet.java"/><files fileName="/trunk/projects/absence-webapp/src/main/webapp/WEB-INF/jsp/uploademployeefile.jsp"/></timeLineEntries><timeLineEntries revision="2"><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/fileupload/employee/EmployeeDetailsSearchService.java"/><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/fileupload/employee/StoreFineosEmployeeDetailsService.java"><comments author="Jose Martinez" comment="missing javadoc&#xA;public? Perhaps protected"/><comments author="Sachin Jaybhay" comment="Added java doc and made protected"/></files><files fileName="/trunk/projects/absence-domain/src/test/java/com/fineos/absence/fileupload/employee/EmployeeDetailsSearchServiceTest.java"/><files fileName="/trunk/projects/absence-domain/src/test/java/com/fineos/absence/fileupload/employee/EmployeeManagerServiceTest.java"/><files fileName="/trunk/projects/absence-domain/src/test/java/com/fineos/absence/fileupload/employee/StoreFineosEmployeeDetailsServiceTest.java"/></timeLineEntries><timeLineEntries revision="3"><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/Db2/udb/sql/EmployeeData_db2.sql"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/Db2/udb/sql/EmployeeData_db2.create.view.sql"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/Db2/udb/sql/EmployeeData_db2_HISTORY.sql"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/Db2/udb/sql/EmployeeData_db2_HISTTRIGGER.sql"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/Oracle/sql/EmployeeData_ora.sql"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/Oracle/sql/EmployeeData_ora.create.view.sql"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/Oracle/sql/EmployeeData_ora_HISTORY.sql"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/Oracle/sql/EmployeeData_ora_HISTTRIGGER.sql"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/SqlServer/sql/EmployeeData_ssql.sql"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/SqlServer/sql/EmployeeData_ssql.create.view.sql"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/SqlServer/sql/EmployeeData_ssql_HISTORY.sql"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/SqlServer/sql/EmployeeData_ssql_HISTTRIGGER.sql"/><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/fileupload/employee/EmployeeData.java"/><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/fileupload/employee/PostProcessEmployeeDataEntity.java"/></timeLineEntries><timeLineEntries revision="4"><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/fileupload/employee/StoreFineosEmployeeDetailsService.java"/></timeLineEntries></timeline></reviewTimeLines></timeLineOwners><timeLineOwners owner="v_kevittm"><reviewTimeLines lastActivityDate="2017-05-16T00:00:00Z" reviewNum="3" summary="FAB-3364: Addition of Eligility UI tab, modification to LeaveRequest TabStripWidget"><timeline><timeLineEntries revision="1"><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/leaverequest/LeaveRequestConstants.java"/><files fileName="/trunk/projects/absence-webapp/src/main/java/com/fineos/absence/leaverequest/EligibilityTabWidget.java"><comments author="Mahendra Dash" comment="1. * at the end is not correct.&#xA;2. &amp;quot;Eligibility Leave Request tab&amp;quot; should be corrected."/><comments author="Mahendra Dash" comment="Java doc for the init() methods seems to be ncessary."/></files><files fileName="/trunk/projects/absence-webapp/src/main/java/com/fineos/absence/leaverequest/LeaveRequestTabStripWidget.java"><comments author="John McCosker" comment="add some java doc"/></files><files fileName="/trunk/projects/absence-webapp/src/main/webapp/widgets/com/fineos/absence/leaverequest/eligibilitytabwidget.jsp"/><files fileName="/trunk/projects/absence-webapp/src/test/java/com/fineos/absence/leaverequest/EligibilityTabWidgetTest.java"/><files fileName="/trunk/projects/absence-webapp/src/test/java/com/fineos/absence/leaverequest/LeaveRequestTabStripWidgetTest.java"/></timeLineEntries><timeLineEntries revision="2"><files fileName="/trunk/projects/absence-webapp/src/main/java/com/fineos/absence/leaverequest/EligibilityTabWidget.java"/><files fileName="/trunk/projects/absence-webapp/src/main/java/com/fineos/absence/leaverequest/LeaveRequestTabStripWidget.java"/></timeLineEntries><timeLineEntries revision="3"><files fileName="/trunk/projects/absence-webapp/src/main/java/com/fineos/absence/leaverequest/LeaveRequestTabStripWidget.java"/></timeLineEntries><timeLineEntries revision="4"><files fileName="/trunk/projects/absence-webapp/src/main/java/com/fineos/absence/leaverequest/EligibilityTabWidget.java"/><files fileName="/trunk/projects/absence-webapp/src/main/java/com/fineos/absence/leaverequest/LeaveRequestTabStripWidget.java"/></timeLineEntries><timeLineEntries revision="5"><files fileName="/trunk/projects/absence-webapp/src/main/java/com/fineos/absence/leaverequest/EligibilityTabWidget.java"/></timeLineEntries></timeline></reviewTimeLines><reviewTimeLines lastActivityDate="2017-05-16T00:00:00Z" reviewNum="4" summary="FAB-3270: StatePaidPlanSelection logic as part of Eligibility"><timeline><timeLineEntries revision="1"><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/leaveplan/LeavePlanPaidLeave.java"><comments author="Mahendra Dash" comment="All the LeavePlanPaidLeave are by default Paid type. Also the code does not check this explicitly.&#xA;&#xA;LeavePlan has a one-to-one association with LeavePlanPaidLeave&#xA;&#xA;So, may be we should change the wordings in this javadoc."/><comments author="Mahendra Dash" comment="return &amp;#39;true&amp;#39; not boolean"/></files><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/leaverequest/SelectedLeavePlan.java"><comments author="Mahendra Dash" comment="We missed a &amp;quot;AC - Exclude UNDETERMINED Plans&amp;quot; that should have been implmented in this method.&#xA;&#xA;1. Exclude those SLP for which the Aplicability status is UNDETERMINED and set the overall eligibility status to PleaseSelect. This will help bring the &amp;quot;--&amp;quot; on the UI.&#xA;&#xA;2. The State Paid plans are done already imn the code, but should be changed."/><comments author="Mark Kevitt" comment="There is a seperate task for this, FAB-3817."/><comments author="Mahendra Dash" comment="Agree, Mohan is on top of it."/><comments author="Mahendra Dash" comment="I would try to make the whole method a oneliner like bellow: &#xA;&#xA;&amp;quot;final LeavePlan leavePlan = getLeavePlan();&#xA;&#x9;&#x9;return leavePlan.isPaid &amp;amp;&amp;amp; leavePlan.getLeavePlanPaidLeave().isStatePaid() &amp;amp;&amp;amp; leavePlan.getLeavePlanPaidLeave().isPlanSelectionOnly()&amp;quot;&#xA;        &#xA;No need to declare those local variables."/><comments author="Mark Kevitt" comment="Trevor didnt like my original method which had too many if statements and was un readable. It was his suggestion to refactor it this way."/><comments author="Mahendra Dash" comment="My suggetions does not change what Trevor said.&#xA;It is one more level of finetunement in the method.&#xA;&#xA;&#xA;Your current code:&#xA;&#x9;protected boolean isStatePaidLeavePlan() {&#xA;&#x9;&#x9;boolean isStatePaid = false;&#xA;&#x9;&#x9;boolean isPlanSelectionOnly = false;&#xA;&#x9;&#x9;final LeavePlan leavePlan = getLeavePlan();&#xA;&#x9;&#x9;if (leavePlan.isPaid()) {&#xA;&#x9;&#x9;&#x9;final LeavePlanPaidLeave leavePlanPaidLeave = leavePlan.getLeavePlanPaidLeave();&#xA;&#x9;&#x9;&#x9;isStatePaid = leavePlanPaidLeave == null ? false : leavePlanPaidLeave.isStatePaid();&#xA;&#x9;&#x9;&#x9;if (isStatePaid) {&#xA;&#x9;&#x9;&#x9;&#x9;isPlanSelectionOnly = leavePlanPaidLeave.isPlanSelectionOnly();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;return (isStatePaid &amp;amp;&amp;amp; isPlanSelectionOnly);&#xA;&#x9;}&#xA;    &#xA;&#xA;My suggetion is:&#xA;&#xA;&#x9;protected boolean isStatePaidLeavePlan() {&#xA;&#x9;&#x9;final LeavePlan leavePlan = getLeavePlan();&#xA;        return leavePlan.isPaid &amp;amp;&amp;amp; leavePlan.getLeavePlanPaidLeave().isStatePaid() &amp;amp;&amp;amp; leavePlan.getLeavePlanPaidLeave().isPlanSelectionOnly();&#xA;&#x9;}&#xA;&#xA;Lets talk tomorrow."/><comments author="Mark Kevitt" comment="final LeavePlanPaidLeave leavePlanPaidLeave = leavePlan.getLeavePlanPaidLeave(); This Object could be null, so I cant really stream line the logic into a one liner.&#xA;It is straight forward as is really.."/><comments author="Mahendra Dash" comment="As per dseign, if the plan is Paid type then I think there will be always one LeavePlanPaidLeave associated to it.&#xA;&#xA;So a check below &amp;quot;leavePlanPaidLeave == null ? false : ...&amp;quot; is not necessary."/><comments author="Mark Kevitt" comment="There may be non Paid plans checked, so we need to check for null"/><comments author="Mahendra Dash" comment="and thats the logic you are handling it at line 546.&#xA;&#xA;if (leavePlan.isPaid()) {"/><comments author="Mark Kevitt" comment="I recall Jose saying that this was a necessary check."/><comments author="Mahendra Dash" comment="Please have a double check and confirm this as it fits."/><comments author="Gil Matias" comment="Do we need this defensive programing? Is there a case when leave plan is paid and a leavepaidplan is not created?"/><comments author="Mahendra Dash" comment="This is discussed with Jose and he suggested to have this double check to make sure things work and it does not break anything. We are aware of the fact that Paid type Leave will have an leavepaidplan hanging on it. And initially we decided not to have a double check for null."/><comments author="Gil Matias" comment="Good enough for me then"/><comments author="John McCosker" comment="modify to following &#xA;return (isStatePaid &amp;amp;&amp;amp; isPlanSelectionOnly);"/></files><files fileName="/trunk/projects/absence-domain/src/test/java/com/fineos/absence/leaverequest/SelectedLeavePlanTest.java"/></timeLineEntries><timeLineEntries revision="2"><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/leaveplan/LeavePlanPaidLeave.java"/><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/leaverequest/SelectedLeavePlan.java"/></timeLineEntries><timeLineEntries revision="3"><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/leaverequest/SelectedLeavePlan.java"/></timeLineEntries></timeline></reviewTimeLines><reviewTimeLines lastActivityDate="2017-05-18T00:00:00Z" reviewNum="2" summary="FAB-3725: EligibilityEvaluationService and Test for Eligibility"><timeline><timeLineEntries revision="1"><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/leaverequest/EligibilityEvaluationService.java"><comments author="Mahendra Dash" comment="&amp;quot;pass EE pojo&amp;quot; does not mean anything."/><comments author="Mahendra Dash" comment="/**&#xA;&#x9; * Run the Eligibility Rule evaluations for this leave request&#xA;&#x9; * Create a EmployeeDetails Pojo from the leave request&#xA;&#x9; * Call the Engine which evaluates the selected leave plans, pass EE pojo&#xA;&#x9; * Persist the EligibiltyResults from the Engine&#xA;&#x9; * Calculate Overall Elibility Status &amp;amp; Persist on the Selected Leave Plan&#xA;&#x9; *&#xA;&#x9; * @param leaveRequest&#xA;&#x9; */&#xA;     &#xA;We have put these lines as steps. Which is ok from a technical perspective. But we could make it represent the business thing it does in a better way."/><comments author="John McCosker" comment="two that remove one"/><comments author="Mahendra Dash" comment="1. List of Selected Leave Plan&#xA;2. We are not using any SLP for eligibility evaluation. We basically evaluate eligibility on them."/><comments author="Mahendra Dash" comment="All caps or all small for SLP.&#xA;&#xA;I prefer &amp;quot;Selected Leave Plan&amp;quot;"/><comments author="Mahendra Dash" comment="Selected Leave Plan"/><comments author="Mahendra Dash" comment="// Persist the Results&#xA;final List&amp;lt;RuleEligibilityResult&amp;gt; ruleEligibilityResults = eligibilityResultsMap.get(plan);&#xA;            &#xA;Next line after this comment does not persist anything.&#xA;Also we can be specific about what is being persisted. Results is not meaningfull."/><comments author="Mahendra Dash" comment="// Persist the SelectedLeavePlan Eligibility Status&#xA;persistEligibilityResults(plan, ruleEligibilityResults);&#xA;&#xA;We are not persisting SLP&amp;#39;s eligibility status. It is not calculated yet. &#xA;So the comment should be corrected."/><comments author="Mahendra Dash" comment="No need to create variable and do an assignement.&#xA;&#xA;We can do it like below:&#xA;&#xA;selectedLeavePlanPersistenceService.updateEligibilityResultType(plan, calculateOverallEligibilityStatus(plan));"/><comments author="John McCosker" comment="returns a List update javadoc"/><comments author="Mahendra Dash" comment="Beacuse we are going to add UNDETEMINED related logic into this too.&#xA;&#xA;1. We might have to change the name of this method to &#xA;getProspectiveSelectedLeavePlans? :) Or something generic.&#xA;&#xA;2. Or if not, and that should be a differnt method, you can drop this comment.&#xA;&#xA;&#xA;I was also thinking it could be excludeSelectedLeavePlansFromEligibilityEvaluation(), but that convesy that the list you return are basically excluded from EligibilityEvaluation.&#xA;&#xA;So lets change it or have a differnt method for UNDETERMINED."/><comments author="Mahendra Dash" comment="selectedLeavePlanPersistenceService.updateEligibilityResultType(selectedLeavePlan, new TaEnum&amp;lt;EligibilityResultType&amp;gt;(EligibilityResultType.NOT_REQUIRED));&#xA;&#xA;This updateEligibilityResultType should be called outside the if, means in the else side."/><comments author="Mahendra Dash" comment="&amp;quot;rule result pojo&amp;quot; can be more specific.&#xA;&#xA;Or you can avoid any java doc comments for a private method too. But if we put, lets make is clear."/><comments author="John McCosker" comment="clean up"/><comments author="John McCosker" comment="returns enum type upsdate java doc"/><comments author="Mahendra Dash" comment="There is a problem in the  EligibilityResultPersistenceService.createEligibilityResult().&#xA;&#xA;I have informed Mohana and given a comment there too.&#xA;&#xA;Once that is fixed, we have to just verify if we get the Eligibility Results this way. I think we will.&#xA;&#xA;Once that is confirmed we will drop this comment."/><comments author="John McCosker" comment="Change Integer to BigDecimal&#xA;so do this&#xA;&#xA;BigDecimal currentMetCount = new BigDecimal(ZERO);&#xA;&#xA;currentMetCount = currentMetCount.add(1);&#xA;&#xA;to get value is&#xA;&#xA;currentMetCount.intValue"/><comments author="Mahendra Dash" comment="Simple int will work if we go in the counter direction.&#xA;Lets replace Integer with int.&#xA;&#xA;after all you are doing count++, and we dont expect this count to exceed int capacity."/><comments author="Mahendra Dash" comment="I think this counter logic is an extra calculation.&#xA;&#xA;It can be simply put like this:&#xA;&#xA;If any one of the rule is NOT_MET, and it is not of type EXCEPTION Exists, then return NOT_MET.&#xA;If above situation never arose, then return MET or NOT_KNOWN, as shown below.&#xA;&#xA;&#x9;public TaEnum&amp;lt;EligibilityResultType&amp;gt; calculateOverallEligibilityStatus(final SelectedLeavePlan selectedLeavePlan) {&#xA;&#x9;&#x9;final List&amp;lt;EligibilityResult&amp;gt; eligibilityResults = selectedLeavePlan.getEligibilityResults();&#xA;&#x9;&#x9;boolean notKnownEligibilityResultExists = false;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;for (final EligibilityResult result : eligibilityResults) {&#xA;&#x9;&#x9;&#x9;final long eligibilityResultType = result.getEligibilityResultType().getFullId();&#xA;&#x9;&#x9;&#x9;final boolean exceptionEligibilityRule = IEligibilityRule.MINIMUM_HOURS_WORKED_DISPLAY_VALUE.equals(result.getEligibilityCriteriaDescription());&#xA;&#xA;&#x9;&#x9;&#x9;if (eligibilityResultType == EligibilityResultType.NOT_MET &amp;amp;&amp;amp; !exceptionEligibilityRule) {&#xA;&#x9;&#x9;&#x9;&#x9;return new TaEnum&amp;lt;EligibilityResultType&amp;gt;(EligibilityResultType.NOT_MET);&#xA;&#x9;&#x9;&#x9;} // We do not expect to have any individual rule have status PLEASE_SELECT and NOT_REQUIRED&#xA;&#x9;&#x9;&#x9;else if (eligibilityResultType == EligibilityResultType.NOT_KNOWN &amp;amp;&amp;amp; !exceptionEligibilityRule) { &#xA;&#x9;&#x9;&#x9;&#x9;notKnownEligibilityResultExists = true;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;return notKnownEligibilityResultExists ? new TaEnum&amp;lt;EligibilityResultType&amp;gt;(EligibilityResultType.NOT_KNOWN)&#xA;&#x9;&#x9;        : new TaEnum&amp;lt;EligibilityResultType&amp;gt;(EligibilityResultType.NOT_KNOWN);&#xA;&#x9;}&#xA;   &#xA;  &#xA;  I tried to wite the code too, and we can test it tomorrow."/><comments author="Gil Matias" comment="please rename this variable to something more developer friendly like eligibilityResult"/><comments author="Mark Kevitt" comment="ok, will check in tomorrow morn."/><comments author="John McCosker" comment="change this line to&#xA;if(currentMetCount.intValue()==eligibilityResults.size())"/></files><files fileName="/trunk/projects/absence-domain/src/test/java/com/fineos/absence/leaverequest/EligibilityEvaluationServiceTest.java"/></timeLineEntries><timeLineEntries revision="2"><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/entitlement/eligibility/engine/rules/IEligibilityRule.java"/><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/entitlement/eligibility/engine/rules/MinimumHoursWorkedEligibilityRule.java"/><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/leaverequest/EligibilityEvaluationService.java"><comments author="Mahendra Dash" comment="ZERO is no more needed.&#xA;Lets remove it too."/><comments author="Mahendra Dash" comment="for each Rule that applies on the concerned Selected Leave Plan."/><comments author="Mahendra Dash" comment="Eligibility"/><comments author="Gil Matias" comment="Side note. It is really hard to read this code. &#xA;&#xA;although i would not consider this an issue maybe we can clean/format this up a bit.&#xA;&#xA;Maybe with some more blank lines"/><comments author="Mark Kevitt" comment="Point taken, I have added some space and a few more comments, will check in tom morning."/><comments author="Mahendra Dash" comment="It takes the name of the parameter."/><comments author="Mahendra Dash" comment="We could add one more condition to avoid one more situation which is not expected but incase it gets by the DB door.&#xA;&#xA;else if ((eligibilityResultType == EligibilityResultType.NOT_KNOWN &amp;amp;&amp;amp; !eligibilityResultIsRelatedToExceptionEligibilityRule) || (eligibilityResultType == EligibilityResultType.PLEASE_SELECT &amp;amp;&amp;amp; !eligibilityResultIsRelatedToExceptionEligibilityRule) || NOT_REQUIRED too..)&#xA;&#xA;Note this will not add any extra performance cost, because the || has a implicit meaning that if the first is true, then no need to check the next. &#xA;It is better we handel this piece in the code.&#xA;&#xA;We can discuss this and decide, if you want.."/><comments author="Mahendra Dash" comment="Probably we can use below way of instantiating the Enum.&#xA;&#xA;new TaEnum&amp;lt;&amp;gt;(EligibilityResultType.NOT_MET);&#xA;&#xA;Applicable for all the places in this method."/></files><files fileName="/trunk/projects/absence-domain/src/test/java/com/fineos/absence/leaverequest/EligibilityEvaluationEngineTest.java"/><files fileName="/trunk/projects/absence-domain/src/test/java/com/fineos/absence/leaverequest/EligibilityEvaluationServiceTest.java"><comments author="Gil Matias" comment="On the verification we should be checking for employeeEligibilityDetails instead of any. otherwise this code is just having the same effets as the one in the expectations"/><comments author="Mahendra Dash" comment="Hi Gil,&#xA;While testing the eligibilityEvaluationService.runEligibilityRuleEvaluations(leaveRequest) call, we just need to know that the engine is invoked with the selected Leave Plans that are expected to be eligbilty evaluataed.&#xA;So a call in the exception and verification with ANY like eligibilityEvaluationEngine.evaluateEligibility(selectedLeavePlans, (EmployeeEligibilityDetails) any); would be ok, as we are not testing anything here from the engine perspective. &#xA;This is purely a EligibilityEvaluationService test.&#xA;&#xA;We can talk tomorrow and clarify if you realy think it is needed to that detail."/></files></timeLineEntries><timeLineEntries revision="3"><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/leaverequest/EligibilityEvaluationService.java"><comments author="Gil Matias" comment="This &#xA;eligibilityResultType == EligibilityResultType.NOT_KNOWN should be on the entity&#xA;&#xA;&#xA;See for example LeavePlanPaidLeave&#xA;public boolean isPlanSelectionOnly() &#xA;    Or you can see the leaveplan&#xA;    &#xA;    Then you can just call EligibilityResult.isSomething()"/><comments author="Mark Kevitt" comment="ok, will check in tomorrow morning."/></files></timeLineEntries></timeline></reviewTimeLines><reviewTimeLines lastActivityDate="2017-05-18T00:00:00Z" reviewNum="5" summary="FAB-3724: EligibilityEvaluationEngine and test as part of Eligibility"><timeline><timeLineEntries revision="1"><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/leaverequest/EligibilityEvaluationEngine.java"><comments author="Mahendra Dash" comment="I remember we had decided to keep it somewhere else.&#xA;May be in the Entitelment or?"/><comments author="Mahendra Dash" comment="We have to call out why this is an engine.&#xA;Why it is separated from the other service.&#xA;&#xA;Lets do it together tomorrow. I kept it as a comment to be able to track it."/><comments author="John McCosker" comment="add java docs and more detailed comments"/><comments author="Mahendra Dash" comment="The name of this method should be evaluateEligibility."/><comments author="Mahendra Dash" comment="Will it be benefitial to have a comment that specifies that here we have to add call to the specific rules?&#xA;&#xA;// Include a call for the new/other rule that needs to be executed.&#xA;&#xA;Or a better description would help."/></files><files fileName="/trunk/projects/absence-domain/src/test/java/com/fineos/absence/leaverequest/EligibilityEvaluationEngineTest.java"/><files fileName="/trunk/projects/absence-domain/src/test/java/com/fineos/absence/leaverequest/EligibilityResultBuilder.java"/></timeLineEntries><timeLineEntries revision="2"><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/leaverequest/EligibilityEvaluationEngine.java"/></timeLineEntries><timeLineEntries revision="3"><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/entitlement/eligibility/engine/EligibilityEvaluationEngine.java"/><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/leaverequest/EligibilityEvaluationEngine.java"/></timeLineEntries><timeLineEntries revision="4"><files fileName="/trunk/projects/absence-domain/src/test/java/com/fineos/absence/entitlement/eligibility/engine/EligibilityEvaluationEngineTest.java"/><files fileName="/trunk/projects/absence-domain/src/test/java/com/fineos/absence/leaverequest/EligibilityEvaluationEngineTest.java"/></timeLineEntries><timeLineEntries revision="5"><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/entitlement/eligibility/engine/EligibilityEvaluationEngine.java"/></timeLineEntries></timeline></reviewTimeLines><reviewTimeLines lastActivityDate="2017-05-23T00:00:00Z" reviewNum="1" summary="FAB-3725: EligibilityEvaluationService and Test for Eligibility"><timeline><timeLineEntries revision="1"><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/leaverequest/EligibilityEvaluationService.java"><comments author="Sergio Torres" comment="result.getValue() instead access again the map"/><comments author="Mahendra Dash" comment="Selected Leave Plans"/></files><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/leaverequest/EligibilityResult.java"/></timeLineEntries><timeLineEntries revision="2"><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/leaverequest/EligibilityEvaluationService.java"/></timeLineEntries></timeline></reviewTimeLines></timeLineOwners><timeLineOwners owner="v_marwaha"><reviewTimeLines lastActivityDate="2017-05-16T00:00:00Z" reviewNum="1" summary="FAB-3741:Re-factored Selenium Test LeavePlanDecisionRecording"><timeline><timeLineEntries revision="1"><files fileName="/trunk/projects/absence-selenium/src/selenium/java/com/fineos/absence/selenium/dto/intake/LeavePlanDecisionStatusDTO.java"><comments author="Tom Gurrie" comment="I haven&amp;#39;t been able to run the test to get to this code but I think these variables should be combined as one called eligibilityStatus and you then set the value accordingly to what you want.&#xA;&#xA;The constructor in the DTO should match the element on the screen and not all there possible values.&#xA;&#xA;I&amp;#39;ve commented at the methods below as well"/><comments author="Anita Marwah" comment="Fixed"/></files><files fileName="/trunk/projects/absence-selenium/src/selenium/java/com/fineos/absence/selenium/dto/intake/LeaveRequestDTO.java"><comments author="Trevor Higgins" comment="Dont use REQNOTES abbreviation, use REQUEST_NOTES, which instantly tells you what it is..."/><comments author="Anita Marwah" comment="Fixed"/></files><files fileName="/trunk/projects/absence-selenium/src/selenium/java/com/fineos/absence/selenium/listviewmodels/LeavePlanDetailsListViewModel.java"/><files fileName="/trunk/projects/absence-selenium/src/selenium/java/com/fineos/absence/selenium/listviewmodels/LeaveRequestDetailsListViewModel.java"/><files fileName="/trunk/projects/absence-selenium/src/selenium/java/com/fineos/absence/selenium/listviewmodels/SelectedLeavePlanAdjudicationStatusListViewModel.java"/><files fileName="/trunk/projects/absence-selenium/src/selenium/java/com/fineos/absence/selenium/pages/DisplayCasePage_LeaveDetails.java"><comments author="Tom Gurrie" comment="following on from comment above, I don&amp;#39;t think you need methods for &amp;#39;accept&amp;#39; &amp;amp; &amp;#39;reject&amp;#39; - you&amp;#39;d have one method and you set up your DTO values to be accept or reject"/><comments author="Anita Marwah" comment="Fixed"/></files><files fileName="/trunk/projects/absence-selenium/src/selenium/java/com/fineos/absence/selenium/tests/leaverequestdecisionrecording/LeavePlanDecisionRecording.java"/></timeLineEntries><timeLineEntries revision="2"><files fileName="/trunk/projects/absence-selenium/src/selenium/java/com/fineos/absence/selenium/dto/intake/LeavePlanDecisionStatusDTO.java"><comments author="Tom Gurrie" comment="should rename these constants to be self explanatory e.g.&#xA;&#xA;APPLICABILITY_STATUS_APPLICABLE = &amp;quot;Applicable&amp;quot;&#xA;PLAN_DECISION_ACCEPTED = &amp;quot;Accepted&amp;quot;"/><comments author="Anita Marwah" comment="Fixed"/></files><files fileName="/trunk/projects/absence-selenium/src/selenium/java/com/fineos/absence/selenium/dto/intake/LeaveRequestDTO.java"><comments author="Tom Gurrie" comment="rename"/><comments author="Anita Marwah" comment="Fixed"/><comments author="Tom Gurrie" comment="Might have a chat about these - not sure if they are being used correctly"/><comments author="Anita Marwah" comment="Fixed"/></files><files fileName="/trunk/projects/absence-selenium/src/selenium/java/com/fineos/absence/selenium/listviewmodels/LeavePlanDetailsListViewModel.java"/><files fileName="/trunk/projects/absence-selenium/src/selenium/java/com/fineos/absence/selenium/listviewmodels/LeaveRequestDetailsListViewModel.java"/><files fileName="/trunk/projects/absence-selenium/src/selenium/java/com/fineos/absence/selenium/listviewmodels/SelectedLeavePlanAdjudicationStatusListViewModel.java"/><files fileName="/trunk/projects/absence-selenium/src/selenium/java/com/fineos/absence/selenium/pages/DisplayCasePage_LeaveDetails.java"/><files fileName="/trunk/projects/absence-selenium/src/selenium/java/com/fineos/absence/selenium/tests/LeaveRequestDecisionRecording/LeavePlanDecisionRecording.java"><comments author="Tom Gurrie" comment="these should live in a DTO"/><comments author="Anita Marwah" comment="Fixed"/><comments author="Tom Gurrie" comment="This whole Given section could be a support method"/><comments author="Anita Marwah" comment="Fixed"/></files><files fileName="/trunk/projects/absence-selenium/src/selenium/java/com/fineos/absence/selenium/tests/LeaveRequestDecisionRecording/LeaveRequestAdjudication.java"><comments author="Tom Gurrie" comment="should all be in DTO&amp;#39;s&#xA;&#xA;Wonder should we just define them as words e.g. APPROVED = &amp;#39;Approved&amp;#39;&#xA;&#xA;Give me a shout"/><comments author="Anita Marwah" comment="Fixing it in next commit for LeaveRequestAdjudication test. Hence, dropping from this review."/><comments author="Tom Gurrie" comment="We don&amp;#39;t want private methods in the classes - this should go into support somehow.&#xA;&#xA;It&amp;#39;s actually a method that could then be reused in loads more tests I&amp;#39;m sure&#xA;&#xA;I notice that you do these steps in LeavePlanDecisonRecording .. so definitely scope for a one method"/><comments author="Anita Marwah" comment="Fixing it in next commit for LeaveRequestAdjudication test. Hence, dropping from this review."/><comments author="Tom Gurrie" comment="convert to existing method ( pretty sure there is one \! )"/><comments author="Anita Marwah" comment="Fixing it in next commit for LeaveRequestAdjudication test. Hence, dropping from this review."/></files><files fileName="/trunk/projects/absence-selenium/src/selenium/java/com/fineos/absence/selenium/tests/leaverequestdecisionrecording/LeavePlanDecisionRecording.java"/><files fileName="/trunk/projects/absence-selenium/src/selenium/java/com/fineos/absence/selenium/tests/leaverequestdecisionrecording/LeaveRequestAdjudication.java"/></timeLineEntries><timeLineEntries revision="3"><files fileName="/trunk/projects/absence-selenium/src/selenium/java/com/fineos/absence/selenium/dto/intake/LeavePlanDecisionStatusDTO.java"/><files fileName="/trunk/projects/absence-selenium/src/selenium/java/com/fineos/absence/selenium/dto/intake/LeaveRequestDTO.java"/><files fileName="/trunk/projects/absence-selenium/src/selenium/java/com/fineos/absence/selenium/pages/DisplayCasePage_LeaveDetails.java"/><files fileName="/trunk/projects/absence-selenium/src/selenium/java/com/fineos/absence/selenium/support/Case.java"><comments author="Tom Gurrie" comment="should these DTO&amp;#39;s be passed to the method - it would make it easier to use the method with non default DTO values"/><comments author="Anita Marwah" comment="Fixed"/></files><files fileName="/trunk/projects/absence-selenium/src/selenium/java/com/fineos/absence/selenium/tests/LeaveRequestDecisionRecording/LeavePlanDecisionRecording.java"/></timeLineEntries><timeLineEntries revision="4"><files fileName="/trunk/projects/absence-selenium/src/selenium/java/com/fineos/absence/selenium/pages/DisplayCasePage_LeaveDetails.java"><comments author="Tom Gurrie" comment="don&amp;#39;t think you need the this"/><comments author="Anita Marwah" comment="Fixed."/></files><files fileName="/trunk/projects/absence-selenium/src/selenium/java/com/fineos/absence/selenium/pages/EditLeaveRequestPage_ManageRequest.java"/><files fileName="/trunk/projects/absence-selenium/src/selenium/java/com/fineos/absence/selenium/tests/LeaveRequestDecisionRecording/LeavePlanDecisionRecording.java"/><files fileName="/trunk/projects/absence-selenium/src/selenium/java/com/fineos/absence/selenium/tests/LeaveRequestDecisionRecording/LeaveRequestAdjudication.java"><comments author="Tom Gurrie" comment="don&amp;#39;t think you need to create this variable. Could you just do something like &#xA;&#xA;verifyEquals(&amp;quot;Verify the correct validation message is displayed&amp;quot;, editLeaveRequestPage_ManageRequest.Validation_MessageReadonlyTextfield.getText() , MessageKeys.LEAVE_REQUEST_APPROVAL_REASON_REQUIRED);"/><comments author="Anita Marwah" comment="Fixed"/></files></timeLineEntries><timeLineEntries revision="5"><files fileName="/trunk/projects/absence-selenium/src/selenium/java/com/fineos/absence/selenium/pages/DisplayCasePage_LeaveDetails.java"/><files fileName="/trunk/projects/absence-selenium/src/selenium/java/com/fineos/absence/selenium/pages/EditLeaveRequestPage_ManageRequest.java"/><files fileName="/trunk/projects/absence-selenium/src/selenium/java/com/fineos/absence/selenium/support/Case.java"/><files fileName="/trunk/projects/absence-selenium/src/selenium/java/com/fineos/absence/selenium/tests/LeaveRequestDecisionRecording/LeavePlanDecisionRecording.java"/><files fileName="/trunk/projects/absence-selenium/src/selenium/java/com/fineos/absence/selenium/tests/LeaveRequestDecisionRecording/LeaveRequestAdjudication.java"/></timeLineEntries></timeline></reviewTimeLines></timeLineOwners><timeLineOwners owner="v_mohanp"><reviewTimeLines lastActivityDate="2017-05-12T00:00:00Z" reviewNum="5" summary="FAB-3700 DB model changes for EligibilityResult "><timeline><timeLineEntries revision="1"><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/Db2/udb/sql/EligibilityResult_db2.sql"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/Db2/udb/sql/EligibilityResult_db2.create.view.sql"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/Db2/udb/sql/EligibilityResult_db2_HISTORY.sql"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/Db2/udb/sql/EligibilityResult_db2_HISTTRIGGER.sql"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/Oracle/sql/EligibilityResult_ora.sql"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/Oracle/sql/EligibilityResult_ora.create.view.sql"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/Oracle/sql/EligibilityResult_ora_HISTORY.sql"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/Oracle/sql/EligibilityResult_ora_HISTTRIGGER.sql"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/SqlServer/sql/EligibilityResult_ssql.sql"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/SqlServer/sql/EligibilityResult_ssql.create.view.sql"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/SqlServer/sql/EligibilityResult_ssql_HISTORY.sql"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/SqlServer/sql/EligibilityResult_ssql_HISTTRIGGER.sql"/><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/leaverequest/EligibilityResult.java"><comments author="Mahendra Dash" comment="If it is a DateTime, we should mention it DateTime everywhere, in the description too. I t should not not be defined differently."/><comments author="Mohan Pattabhiramaswamy" comment="Corrected with description reading as&#xA;@Caption(displayName = &amp;quot;Eligibility Result Override DateTime&amp;quot;, description = &amp;quot;The DateTime value of the EligibilityResult when is overridden&amp;quot;)"/><comments author="Mahendra Dash" comment="Description for &amp;quot;eligibilityResultReason&amp;quot; should have the notion of Overrriden and Calculated eligibility result.&#xA;Because, this field has a multiple use."/><comments author="Mohan Pattabhiramaswamy" comment="The size changed to max value of 600 and the description of the caption changed as shown below&#xA;@Caption(displayName = &amp;quot;Eligibility Result Reason&amp;quot;, description = &amp;quot;This describes the calculated/overridden eligibility reason&amp;quot;)&#xA;&#x9;@Size(max = 600, message = &amp;quot;The eligibilityResultReason must not be greater than {max} characters&amp;quot;)&#xA;&#x9;private String eligibilityResultReason;"/><comments author="Mahendra Dash" comment="Increase the Maxlength/Maxsize of EligibilityResultReason to 600 atleast. In future if there is a change in this we also have to handel it.&#xA;&#xA;Use MaxSize property.&#xA;&#xA;Make sure the changes applied, DB scripts corrected, 4 DB instances are updated with this change aswell."/><comments author="Mohan Pattabhiramaswamy" comment="The max length  is changed to 600 characaters. All the 4 DB instances are updated as well"/><comments author="Mahendra Dash" comment="@return missing"/><comments author="Mohan Pattabhiramaswamy" comment="Added the return statement"/><comments author="Daniel Delgado" comment="Small styling things: &#xA;&amp;quot;gets&amp;quot; should be &amp;quot;Gets&amp;quot;&#xA;And remove empty lines between Javadoc and the method"/><comments author="Mahendra Dash" comment="@return missing"/></files></timeLineEntries><timeLineEntries revision="2"><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/Db2/udb/sql/EligibilityResult_db2.sql"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/Db2/udb/sql/EligibilityResult_db2.create.view.sql"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/Db2/udb/sql/EligibilityResult_db2_HISTORY.sql"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/Oracle/sql/EligibilityResult_ora.sql"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/Oracle/sql/EligibilityResult_ora.create.view.sql"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/Oracle/sql/EligibilityResult_ora_HISTORY.sql"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/SqlServer/sql/EligibilityResult_ssql.sql"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/SqlServer/sql/EligibilityResult_ssql.create.view.sql"/><files fileName="/trunk/projects/absence-domain/sql/absence/create-from-scratch/SqlServer/sql/EligibilityResult_ssql_HISTORY.sql"/><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/leaverequest/EligibilityResult.java"/></timeLineEntries></timeline></reviewTimeLines><reviewTimeLines lastActivityDate="2017-05-16T00:00:00Z" reviewNum="4" summary="FAB-3290 EligibilityRulePersistenceService to persist the EligibilityResult and Update service for SelectedLeavePlan"><timeline><timeLineEntries revision="1"><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/leaverequest/EligibilityResultPersistenceService.java"><comments author="Mahendra Dash" comment="I think this will not work.&#xA;&#xA;We have to set the rel the otherway round as specified below.&#xA;&#xA;&#x9;&#x9;selectedLeavePlan.getEligibilityResults().add(eligibilityResult);"/><comments author="Mohan Pattabhiramaswamy" comment="The current implementation is working and no where in the application they are setting the association in the suggested way. I think the existing implementation will do"/></files><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/leaverequest/SelectedLeavePlanPersistenceService.java"/><files fileName="/trunk/projects/absence-domain/src/test/java/com/fineos/absence/leaverequest/EligibilityResultPersistenceServiceTest.java"><comments author="Mahendra Dash" comment="Why the name has 1?"/><comments author="Gil Matias" comment="test names should be something like nameOftheMethod_SpecificCase()"/><comments author="Mohan Pattabhiramaswamy" comment="Fixed as a part of http://iedev317.development.fineos.com/reviewboard/r/71779/"/><comments author="Mohan Pattabhiramaswamy" comment="Method name changed to createEligibilityResult_CreatesAndReturnsEligibilityResultEntity_WhenRuleEligibilityResultVOIsPassed"/><comments author="Gil Matias" comment="createEligibilityResult_WhenRuleEligibilityResultVOIsPassed&#xA;&#xA;Next time i think this would have been suficient.&#xA;&#xA;There is ongoing discution between names too big and names too small so we should that that in consideration and try to reach a middle ground&#xA;&#xA;For now leave it as it is."/></files><files fileName="/trunk/projects/absence-domain/src/test/java/com/fineos/absence/leaverequest/SelectedLeavePlanPersistenceServiceTest.java"><comments author="Mahendra Dash" comment="Nanme:&#xA;&#xA;verifyUpdateEligibilityResultTypeTest"/><comments author="Mohan Pattabhiramaswamy" comment="Changed the Method signature"/></files></timeLineEntries><timeLineEntries revision="2"><files fileName="/trunk/projects/absence-domain/src/test/java/com/fineos/absence/leaverequest/EligibilityResultPersistenceServiceTest.java"/><files fileName="/trunk/projects/absence-domain/src/test/java/com/fineos/absence/leaverequest/SelectedLeavePlanPersistenceServiceTest.java"/></timeLineEntries></timeline></reviewTimeLines><reviewTimeLines lastActivityDate="2017-05-17T00:00:00Z" reviewNum="1" summary="FAB-3802 UX - Summary page - Adding 2 new fields to Eligibility Result List view"><timeline><timeLineEntries revision="1"><files fileName="/trunk/projects/absence-webapp/src/main/java/com/fineos/absence/leaverequest/intake/EligibilityResultTableModel.java"><comments author="John McCosker" comment="Spelling mistake - typo"/></files></timeLineEntries><timeLineEntries revision="2"><files fileName="/trunk/projects/absence-webapp/src/main/java/com/fineos/absence/leaverequest/intake/EligibilityResultTableModel.java"><comments author="Mahendra Dash" comment="We must have a column for the Overall Eligibility Status Icon."/><comments author="Mohan Pattabhiramaswamy" comment="I have added a column for Icon"/></files><files fileName="/trunk/projects/absence-webapp/src/test/java/com/fineos/absence/leaverequest/intake/EligibilityResultTableModelTest.java"/></timeLineEntries><timeLineEntries revision="3"><files fileName="/trunk/projects/absence-webapp/src/main/java/com/fineos/absence/leaverequest/intake/EligibilityResultTableModel.java"><comments author="Killian Farrell" comment="Use guave Objets firstNotNull"/><comments author="Mohan Pattabhiramaswamy" comment="I have used com.google.common.base.Objects.firstNonNull in 2 places where it was applicable"/></files><files fileName="/trunk/projects/absence-webapp/src/main/java/com/fineos/absence/leaverequest/intake/SelectedLeavePlanStatusTableModel.java"/><files fileName="/trunk/projects/absence-webapp/src/test/java/com/fineos/absence/leaverequest/intake/EligibilityResultTableModelTest.java"/><files fileName="/trunk/projects/absence-webapp/src/test/java/com/fineos/absence/leaverequest/intake/SelectedLeavePlanStatusTableModelTest.java"/></timeLineEntries><timeLineEntries revision="4"><files fileName="/trunk/projects/absence-webapp/src/main/java/com/fineos/absence/leaverequest/intake/EligibilityResultTableModel.java"/></timeLineEntries></timeline></reviewTimeLines><reviewTimeLines lastActivityDate="2017-05-18T00:00:00Z" reviewNum="3" summary="FAB-3802 FAB-3817 FAB-3746 Ux updates to eligibilityResultListView Display , Exclude undetermined leave plans and cetrain tidyups"><timeline><timeLineEntries revision="1"><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/leaverequest/EligibilityResultPersistenceService.java"><comments author="Mahendra Dash" comment="This comment can be specific to what is used and what is created."/><comments author="Mahendra Dash" comment="Sequence param in the defination and in the comment are not in sync."/></files><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/leaverequest/EligibilityResultService.java"/><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/leaverequest/SelectedLeavePlan.java"><comments author="Mahendra Dash" comment="Clarity is the key in JAVA DOC. If you put confusing information, this does not meet the purpose but confuses the user. :)&#xA;&#xA;I would put it like this:&#xA;&#xA;&amp;quot;If Applicability result of the Selected Leave Plan is Undetermined return true, otherwise false&amp;quot;"/><comments author="Mohan Pattabhiramaswamy" comment="The comment has been changed as suggested"/><comments author="Mahendra Dash" comment="return boolean"/><comments author="Mohan Pattabhiramaswamy" comment="returns boolean and the appropriate comment is given"/><comments author="Gil Matias" comment="should be IsUndetermined&#xA;&#xA;&#xA;side note the return message could say something like this &#xA;&#x9;&#xA;&#x9;  * @return true if the selected time bank method for the leave plan&#xA;&#x9; *         availability is reasonable, otherwise returns false"/><comments author="Mohan Pattabhiramaswamy" comment="I have changed the method signature as suggested"/></files><files fileName="/trunk/projects/absence-domain/src/test/java/com/fineos/absence/leaverequest/EligibilityResultPersistenceServiceTest.java"/><files fileName="/trunk/projects/absence-domain/src/test/java/com/fineos/absence/leaverequest/EligibilityResultServiceTest.java"/><files fileName="/trunk/projects/absence-webapp/src/main/java/com/fineos/absence/leaverequest/SelectedLeavePlanListviewWidget.java"/><files fileName="/trunk/projects/absence-webapp/src/main/webapp/widgets/com/fineos/absence/leaverequest/selectedleaveplanlistviewwidget.jsp"/></timeLineEntries><timeLineEntries revision="2"><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/leaverequest/EligibilityEvaluationService.java"/><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/leaverequest/EligibilityResultPersistenceService.java"/><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/leaverequest/SelectedLeavePlan.java"/></timeLineEntries><timeLineEntries revision="3"><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/leaverequest/EligibilityEvaluationService.java"/><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/leaverequest/rules/AbsenceCaseIntakeRules.java"/><files fileName="/trunk/projects/absence-webapp/src/main/java/com/fineos/absence/leaverequest/intake/SelectedLeavePlanStatusTableModel.java"/><files fileName="/trunk/projects/absence-webapp/src/test/java/com/fineos/absence/leaverequest/intake/SelectedLeavePlanStatusTableModelTest.java"/></timeLineEntries><timeLineEntries revision="4"><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/leaverequest/EligibilityEvaluationService.java"/><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/leaverequest/SelectedLeavePlan.java"/></timeLineEntries></timeline></reviewTimeLines><reviewTimeLines lastActivityDate="2017-05-23T00:00:00Z" reviewNum="2" summary="FAB-3894 Eligibility Listview Filter datatype changes"><timeline><timeLineEntries revision="1"><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/leaverequest/SelectedLeavePlanPersistenceService.java"><comments author="Mahendra Dash" comment="I wonder why we cant do these things at those places where we called this method.&#xA;&#xA;Secondly, if we are updating the Selected Leave Plan, we should have the name as:&#xA;&#xA;updateSelectedLeavePlan"/><comments author="Mohan Pattabhiramaswamy" comment="Since it is the fag end of the sprint I think it is little risky to do this change. Since it is refactoring we will do this change as a part of FAB-3892 Tidy-up for Eligibility framework A05-F04"/><comments author="Mahendra Dash" comment="Also keeping this method public will allow every one to call this and then this will create an issue of change of the eligibility evaluation timestamp which is not expected..&#xA;&#xA;So it is better we do these two things in EligibilityEvaluationService.&#xA;&#xA;&#x9;&#x9;&#x9;selectedLeavePlan.setEligibilityResultType(calculateOverallEligibilityStatus(selectedLeavePlan));&#xA;&#x9;&#x9;&#x9;selectedLeavePlan.setEligibilityEvaluationTimestamp(new DateTime());"/><comments author="Mohan Pattabhiramaswamy" comment="Yes, We can do this way. But since this bit of code is called 3 times we can put in a private method. As replied in the above comment we can address this as a part of FAB-3892 Tidy-up for Eligibility framework A05-F04"/></files><files fileName="/trunk/projects/absence-webapp/src/main/java/com/fineos/absence/leaverequest/SelectedLeavePlansForAbsenceCaseListviewTableModel.java"/><files fileName="/trunk/projects/absence-webapp/src/main/java/com/fineos/absence/leaverequest/intake/EligibilityResultTableModel.java"/></timeLineEntries></timeline></reviewTimeLines></timeLineOwners><timeLineOwners owner="v_padapanar"><reviewTimeLines lastActivityDate="2017-05-24T00:00:00Z" reviewNum="1" summary="FAB-3796 Bug fix related to Satuatory Leave plans and Employer Leave plans getting deleted when a new a satuatory leave plan is added"><timeline><timeLineEntries revision="1"><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/serviceagreement/servicesdefinition/paidleaveplanelectives/PaidLeavePlanManagementPersistenceService.java"><comments author="Mahendra Dash" comment="A business specific comment that conveys the reason for the break would help.&#xA;&#xA;OR,&#xA;&#xA;Either the method name is based on the entity names or business objects. A description would help for what exactly we are doing here for which entity or business object.&#xA;&#xA;We are dealing with Leave Plands of PAID type, OR We are dealing with LeavePlanPaidLeave entity."/></files><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/serviceagreement/servicesdefinition/paidleaveplanelectives/PaidLeavePlanManagementService.java"><comments author="Sergio Torres" comment="selectedPaymentServiceLevelForLeavePlansMap.get(leavePlan) in a variable to no access twice to the map"/></files><files fileName="/trunk/projects/absence-domain/src/test/java/com/fineos/absence/serviceagreement/servicesdefinition/paidleaveplanelectives/PaidLeavePlanManagementPersistenceServiceTest.java"/><files fileName="/trunk/projects/absence-webapp/src/main/java/com/fineos/absence/leaveplan/LeavePlanFilterWidget.java"/><files fileName="/trunk/projects/absence-webapp/src/main/java/com/fineos/absence/serviceagreement/servicesprovided/PaidLeaveManagementPaymentServiceLevelOverviewWidget.java"><comments author="Sergio Torres" comment="extract the leave plan to a variable"/></files><files fileName="/trunk/projects/absence-webapp/src/test/java/com/fineos/absence/leaveplan/LeavePlanFilterWidgetTest.java"/></timeLineEntries><timeLineEntries revision="2"><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/serviceagreement/servicesdefinition/paidleaveplanelectives/PaidLeavePlanManagementService.java"/></timeLineEntries><timeLineEntries revision="3"><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/serviceagreement/servicesdefinition/paidleaveplanelectives/PaidLeavePlanManagementPersistenceService.java"/></timeLineEntries></timeline></reviewTimeLines></timeLineOwners><timeLineOwners owner="v_ranah"><reviewTimeLines lastActivityDate="2017-05-15T00:00:00Z" reviewNum="1" summary="FAB-3764"><timeline><timeLineEntries revision="1"><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/entitlement/eligibility/engine/rules/EligibilityRule.java"><comments author="Mahendra Dash" comment="We can put the description for this interface like:&#xA;&#xA;I would write it like this.&#xA;&#xA;&amp;quot;EligibilityRule interface defines the abstract contract for the eligibility evaluation for the Leave Plans (specicifically SelectedLeavePlan). This defines a basis for implmenting the individual eligibility rule. &#xA;&#xA;Every individual eligibility rule will have its own implementation details.&amp;quot;"/><comments author="Trevor Higgins" comment="Suggest prefix of &amp;quot;I&amp;quot; to signify interface, IEligibilityRule"/></files><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/entitlement/eligibility/engine/rules/EmployeeEligibilityDetails.java"><comments author="John McCosker" comment="better javadoc decsiption here, please explain employment record purpose. Please explain input / output reqyirements."/><comments author="Trevor Higgins" comment="Do setters need to be public, they should be protected, as only the rule engine should be setting them"/></files><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/entitlement/eligibility/engine/rules/MinimumHoursWorkedEligibilityRule.java"><comments author="Trevor Higgins" comment="should be static final and called CONVERTER_MAP. Move the new HashMap&amp;lt;&amp;gt;() code up here so it can be final"/><comments author="John McCosker" comment="atcual_hours_reason"/><comments author="John McCosker" comment="rename to hours_worked_unknown_reason"/><comments author="Trevor Higgins" comment="Use java 7 diamond. This has been in 20 reviews at this point, please stop doing new &#xA;&#xA;HashMap&amp;lt;Long, MinimumHoursConverter&amp;gt;();"/><comments author="Hiren Rana" comment="will make sure."/><comments author="John McCosker" comment="javadoc please explain where / how overriden etc.."/><comments author="Hiren Rana" comment="/**&#xA;&#x9; * {@inheritDoc}&#xA;&#x9; */&#xA;     is present to see the java doc specified on the interface.&#xA;     Also Implementor class MinimumHoursWorkedEligibilityRule for the interface contains the specific details about the same at class level so no need to duplicate the same at overrriden method level."/><comments author="Mahendra Dash" comment="Before doing the real calculations, we could handel the assumption no -7.&#xA;&#xA;7. Plans with no eligibility requirements under a certain rule will be setup with a 0 (e.g. 0 minimum hours, 0 length of service etc.) and as a result the rule will be met.&#xA;&#xA;So, we could have a simple IF statement to deal with this and return a MET specific eligibility result."/><comments author="Hiren Rana" comment="As per the new code refactoring this condition will be met when actual hours anything &amp;gt;= expected hours which is zero."/><comments author="Trevor Higgins" comment="Commented before not to use names with numbers like &amp;quot;workedWithinBasis2MinimumHoursConverterMap&amp;quot;. Just use converterMap"/><comments author="Mahendra Dash" comment="ruleEligibilityResult.setEligibilityRuleDefinition(eligibilityRequirement.getMinimumHours() + RULE_DEFINITION);&#xA;    &#xA;I think we should use (expectedHoursWorkedPerYear + RULE_DEFINITION) instead."/><comments author="Mahendra Dash" comment="AC says: &#xA;-&#x9;Not Known if employee hours worked doesn’t have a value&#xA;&#xA;So, Zero is a value. So it should be NOT_MET instead. May be we should handel this in a differnt way."/><comments author="Mahendra Dash" comment="The NOT_KNOWN case should be checked at the end, as this will be the least probable case(every employee will have some value of hors worked).&#xA;&#xA;It is put at the top.We can put this condition at the end. Move it to end."/><comments author="Hiren Rana" comment="if we put it at the end then condition of Not known will never be satisfied. Since actual hours &amp;lt; expected hours will be satisfied even for condition which is not known .i.e. actual hours is zero &amp;lt; whatever the expected hours is. So moved the not know condition as second check and in the end it will be always not met."/><comments author="Mahendra Dash" comment="Reopened to have a discussion before we close it.&#xA;&#xA;Main thing is we need to know how to handel this situation. Will it ever happen? If it will happen then how will we get hold of this special condition.&#xA;In the case if this information is not present at all (Example - may be for some employer they have not filled in data for this field for all the employees), how do we know this?&#xA;If that can happen, then as you said we should bring it to top and then do the MET and NOT_MET steps.&#xA;&#xA;Lets discuss this again."/><comments author="Hiren Rana" comment="Right now we will always get 0 as default value."/><comments author="Mahendra Dash" comment="Create a JIRA story and assign it to TAJ. &#xA;We will discuss this with Maura and then check with Backlog team and decide if this NOT_KNOWN case is needed or not.&#xA;Lets keep track of this and make sure it is resolved correctly."/></files><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/entitlement/eligibility/engine/rules/RuleEligibilityResult.java"><comments author="John McCosker" comment="java doc comment explain this return class and responsibilities"/><comments author="Trevor Higgins" comment="Protected setters"/></files><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/entitlement/eligibility/engine/rules/minhoursworkedrule/CalendarWeekConverter.java"><comments author="John McCosker" comment="no java doc comment"/><comments author="Hiren Rana" comment="/*&#xA;&#xA;     * {@inheritDoc}&#xA;&#xA;/&#xA;&#xA;     is present to see the java doc specified on the interface.&#xA;&#xA;     Also Implementor class CalendarWeeConverter for the interface contains the specific details about the same at class level so no need to duplicate the same at overrriden method level."/></files><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/entitlement/eligibility/engine/rules/minhoursworkedrule/DaysConverter.java"><comments author="John McCosker" comment="add javadoc"/><comments author="Hiren Rana" comment="/*&#xA;&#xA;     * {@inheritDoc}&#xA;&#xA;/&#xA;&#xA;     is present to see the java doc specified on the interface.&#xA;&#xA;     Also Implementor class DaysConverter for the interface contains the specific details about the same at class level so no need to duplicate the same at overrriden method level."/></files><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/entitlement/eligibility/engine/rules/minhoursworkedrule/MinimumHoursConverter.java"><comments author="Trevor Higgins" comment="Surely these exist in some other support class or utility?! Speak with Killian has he uses similar in TimeRequestedService"/><comments author="Hiren Rana" comment="Had a word with Killian he has not used any such variable."/><comments author="Trevor Higgins" comment="I commented on http://reviewboard/reviewboard/r/71545/ about this. He uses constants such as SIXTY, MAX_HOURS_ALLOWED, which are all related to converting times. I suggest we have a utility class that holds all these constants, called TimeConstants, with values like SIXTY, TWENYT_FOUR, THREE_HINDRED_AND_SIXTY_FIVE, FIFTY_TWO etc."/><comments author="Hiren Rana" comment="Moved to AbsenceDateUtils"/></files><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/entitlement/eligibility/engine/rules/minhoursworkedrule/MonthsConverter.java"><comments author="John McCosker" comment="java doc"/><comments author="Hiren Rana" comment="/*&#xA;&#xA;     * {@inheritDoc}&#xA;&#xA;/&#xA;&#xA;     is present to see the java doc specified on the interface.&#xA;&#xA;     Also Implementor class MonthsConverter for the interface contains the specific details about the same at class level so no need to duplicate the same at overrriden method level."/></files><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/entitlement/eligibility/engine/rules/minhoursworkedrule/WeeksConverter.java"><comments author="John McCosker" comment="java doc"/><comments author="Hiren Rana" comment="/*&#xA;&#xA;     * {@inheritDoc}&#xA;&#xA;/&#xA;&#xA;     is present to see the java doc specified on the interface.&#xA;&#xA;     Also Implementor class WeeksConverter for the interface contains the specific details about the same at class level so no need to duplicate the same at overrriden method level."/></files><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/entitlement/eligibility/engine/rules/minhoursworkedrule/WorkWeekConverter.java"><comments author="John McCosker" comment="again java doc"/><comments author="Hiren Rana" comment="/*&#xA;&#xA;     * {@inheritDoc}&#xA;&#xA;/&#xA;&#xA;     is present to see the java doc specified on the interface.&#xA;&#xA;     Also Implementor class WorkWeekConverter for the interface contains the specific details about the same at class level so no need to duplicate the same at overrriden method level."/></files><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/entitlement/eligibility/engine/rules/minhoursworkedrule/YearsConverter.java"><comments author="John McCosker" comment="java doc"/><comments author="Hiren Rana" comment="/*&#xA;&#xA;     * {@inheritDoc}&#xA;&#xA;/&#xA;&#xA;     is present to see the java doc specified on the interface.&#xA;&#xA;     Also Implementor class YearsConverter for the interface contains the specific details about the same at class level so no need to duplicate the same at overrriden method level."/></files><files fileName="/trunk/projects/absence-domain/src/test/java/com/fineos/absence/entitlement/eligibility/engine/rules/MinimumHoursWorkedEligibilityRuleTest.java"><comments author="Trevor Higgins" comment="Use @Tested on this and you dont need to use this.minimumHoursWorkedEligibilityRule = new MinimumHoursWorkedEligibilityRule();"/><comments author="John McCosker" comment="just comment what and why before every test this is run"/><comments author="Trevor Higgins" comment="ITs not needed in fact"/><comments author="Hiren Rana" comment="Before method is no longer required. USed annotation @tested"/><comments author="John McCosker" comment="rename variable to actual hours worked per year"/><comments author="Trevor Higgins" comment="Use assertThat(actual, is(expected)); its mcuh easier to read&#xA;&#xA;Use static imports also. &amp;quot;is&amp;quot; comes from CoreMatchers, assertThat from Assert"/><comments author="Trevor Higgins" comment="Not null? weshould be more specific"/><comments author="Hiren Rana" comment="If the result of evaluation is MET then reason will not be present. So it will be Null. That is what is verified."/><comments author="Trevor Higgins" comment="assretThat"/><comments author="Trevor Higgins" comment="assretThat"/></files><files fileName="/trunk/projects/absence-domain/src/test/java/com/fineos/absence/entitlement/eligibility/engine/rules/minhoursworkedrule/CalenderWeekConverterTest.java"><comments author="Trevor Higgins" comment="@runwith(Jmockit)"/><comments author="Trevor Higgins" comment="Use @Tested on private variable rather than manual instantation"/></files><files fileName="/trunk/projects/absence-domain/src/test/java/com/fineos/absence/entitlement/eligibility/engine/rules/minhoursworkedrule/DaysConverterTest.java"><comments author="Trevor Higgins" comment="JMockit and @Tested"/></files><files fileName="/trunk/projects/absence-domain/src/test/java/com/fineos/absence/entitlement/eligibility/engine/rules/minhoursworkedrule/MonthsConverterTest.java"><comments author="Trevor Higgins" comment="JMockit and @Tested"/></files><files fileName="/trunk/projects/absence-domain/src/test/java/com/fineos/absence/entitlement/eligibility/engine/rules/minhoursworkedrule/WeeksConverterTest.java"><comments author="Trevor Higgins" comment="JMockit and @Tested"/></files><files fileName="/trunk/projects/absence-domain/src/test/java/com/fineos/absence/entitlement/eligibility/engine/rules/minhoursworkedrule/WorkWeekConverterTest.java"><comments author="Trevor Higgins" comment="JMockit and @Tested"/></files><files fileName="/trunk/projects/absence-domain/src/test/java/com/fineos/absence/entitlement/eligibility/engine/rules/minhoursworkedrule/YearsConverterTest.java"><comments author="Trevor Higgins" comment="JMockit and @Tested"/></files></timeLineEntries><timeLineEntries revision="2"><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/entitlement/eligibility/engine/rules/EligibilityRule.java"/><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/entitlement/eligibility/engine/rules/EmployeeEligibilityDetails.java"/><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/entitlement/eligibility/engine/rules/IEligibilityRule.java"><comments author="Trevor Higgins" comment="REmvoe &amp;quot;public&amp;quot;, interface methods are public by default"/></files><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/entitlement/eligibility/engine/rules/MinimumHoursWorkedEligibilityRule.java"/><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/entitlement/eligibility/engine/rules/RuleEligibilityResult.java"/><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/entitlement/eligibility/engine/rules/minhoursworkedrule/CalendarWeekConverter.java"/><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/entitlement/eligibility/engine/rules/minhoursworkedrule/DaysConverter.java"/><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/entitlement/eligibility/engine/rules/minhoursworkedrule/IMinimumHoursConverter.java"><comments author="Mahendra Dash" comment="Lets have the package name corrected to:&#xA;&#xA;either&#xA;com.fineos.absence.entitlement.eligibility.engine.converter&#xA;&#xA;or &#xA;com.fineos.absence.entitlement.eligibility.engine.rules.converter"/><comments author="Hiren Rana" comment="moved to com.fineos.absence.entitlement.eligibility.engine.converter"/><comments author="Trevor Higgins" comment="Again these shuold be in some common class TimeConstants etc, in absence.common package"/><comments author="Hiren Rana" comment="Moved to AbsenceDateUtils"/></files><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/entitlement/eligibility/engine/rules/minhoursworkedrule/MinimumHoursConverter.java"/><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/entitlement/eligibility/engine/rules/minhoursworkedrule/MonthsConverter.java"/><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/entitlement/eligibility/engine/rules/minhoursworkedrule/WeeksConverter.java"/><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/entitlement/eligibility/engine/rules/minhoursworkedrule/WorkWeekConverter.java"/><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/entitlement/eligibility/engine/rules/minhoursworkedrule/YearsConverter.java"/><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/leaverequest/EligibilityEvaluationEngine.java"/><files fileName="/trunk/projects/absence-domain/src/test/java/com/fineos/absence/entitlement/eligibility/engine/rules/MinimumHoursWorkedEligibilityRuleTest.java"/></timeLineEntries><timeLineEntries revision="3"><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/entitlement/eligibility/engine/rules/EmployeeEligibilityDetails.java"/><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/entitlement/eligibility/engine/rules/IEligibilityRule.java"/><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/entitlement/eligibility/engine/rules/MinimumHoursWorkedEligibilityRule.java"><comments author="Mahendra Dash" comment="Can we move this to the interface or a common place?&#xA;&#xA;1. This will help us know how many rules are implmented in our system.&#xA;&#xA;2. We can reuse the value for verification in Overall Eligbility calculations. To know which rule type a EligibilityResult is for.&#xA;&#xA;Lets talk this tomorrow."/><comments author="Hiren Rana" comment="Fixed in another review"/></files><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/entitlement/eligibility/engine/rules/RuleEligibilityResult.java"/><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/leaverequest/EligibilityEvaluationEngine.java"/><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/leaverequest/EligibilityEvaluationService.java"/><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/leaverequest/EmployeeEligibilityDetails.java"/><files fileName="/trunk/projects/absence-domain/src/test/java/com/fineos/absence/entitlement/eligibility/engine/rules/MinimumHoursWorkedEligibilityRuleTest.java"/><files fileName="/trunk/projects/absence-domain/src/test/java/com/fineos/absence/entitlement/eligibility/engine/rules/minhoursworkedrule/CalenderWeekConverterTest.java"/><files fileName="/trunk/projects/absence-domain/src/test/java/com/fineos/absence/entitlement/eligibility/engine/rules/minhoursworkedrule/DaysConverterTest.java"/><files fileName="/trunk/projects/absence-domain/src/test/java/com/fineos/absence/entitlement/eligibility/engine/rules/minhoursworkedrule/MonthsConverterTest.java"/><files fileName="/trunk/projects/absence-domain/src/test/java/com/fineos/absence/entitlement/eligibility/engine/rules/minhoursworkedrule/WeeksConverterTest.java"/><files fileName="/trunk/projects/absence-domain/src/test/java/com/fineos/absence/entitlement/eligibility/engine/rules/minhoursworkedrule/WorkWeekConverterTest.java"/><files fileName="/trunk/projects/absence-domain/src/test/java/com/fineos/absence/entitlement/eligibility/engine/rules/minhoursworkedrule/YearsConverterTest.java"/><files fileName="/trunk/projects/absence-domain/src/test/java/com/fineos/absence/leaverequest/EligibilityEvaluationEngineTest.java"/><files fileName="/trunk/projects/absence-domain/src/test/java/com/fineos/absence/leaverequest/EligibilityEvaluationServiceTest.java"/><files fileName="/trunk/projects/absence-domain/src/test/java/com/fineos/absence/leaverequest/EligibilityResultPersistenceServiceTest.java"/></timeLineEntries><timeLineEntries revision="4"><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/common/AbsenceDateUtils.java"/><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/entitlement/eligibility/engine/converter/CalendarWeekConverter.java"/><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/entitlement/eligibility/engine/converter/DaysConverter.java"/><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/entitlement/eligibility/engine/converter/IMinimumHoursConverter.java"/><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/entitlement/eligibility/engine/converter/MonthsConverter.java"/><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/entitlement/eligibility/engine/converter/WeeksConverter.java"/><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/entitlement/eligibility/engine/converter/WorkWeekConverter.java"><comments author="Trevor Higgins" comment="This is identical to CalendarWeekConverter impolementation?"/><comments author="Hiren Rana" comment="FAB-3892 issue has been raised.&#xA;Discussion has been initiated with Backlog team for the same that if there is different calculation involved in the work week and calendar week rule.&#xA;Based on the outcome the converter will be adapted as in updated or duplicate converter will be removed."/></files><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/entitlement/eligibility/engine/converter/YearsConverter.java"/><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/entitlement/eligibility/engine/rules/IEligibilityRule.java"/><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/entitlement/eligibility/engine/rules/MinimumHoursWorkedEligibilityRule.java"/><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/entitlement/eligibility/engine/rules/minhoursworkedrule/CalendarWeekConverter.java"/><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/entitlement/eligibility/engine/rules/minhoursworkedrule/DaysConverter.java"/><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/entitlement/eligibility/engine/rules/minhoursworkedrule/IMinimumHoursConverter.java"/><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/entitlement/eligibility/engine/rules/minhoursworkedrule/MonthsConverter.java"/><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/entitlement/eligibility/engine/rules/minhoursworkedrule/WeeksConverter.java"/><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/entitlement/eligibility/engine/rules/minhoursworkedrule/WorkWeekConverter.java"/><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/entitlement/eligibility/engine/rules/minhoursworkedrule/YearsConverter.java"/><files fileName="/trunk/projects/absence-domain/src/test/java/com/fineos/absence/entitlement/eligibility/engine/converter/CalenderWeekConverterTest.java"/><files fileName="/trunk/projects/absence-domain/src/test/java/com/fineos/absence/entitlement/eligibility/engine/converter/DaysConverterTest.java"/><files fileName="/trunk/projects/absence-domain/src/test/java/com/fineos/absence/entitlement/eligibility/engine/converter/MonthsConverterTest.java"/><files fileName="/trunk/projects/absence-domain/src/test/java/com/fineos/absence/entitlement/eligibility/engine/converter/WeeksConverterTest.java"/><files fileName="/trunk/projects/absence-domain/src/test/java/com/fineos/absence/entitlement/eligibility/engine/converter/WorkWeekConverterTest.java"/><files fileName="/trunk/projects/absence-domain/src/test/java/com/fineos/absence/entitlement/eligibility/engine/converter/YearsConverterTest.java"/><files fileName="/trunk/projects/absence-domain/src/test/java/com/fineos/absence/entitlement/eligibility/engine/rules/minhoursworkedrule/CalenderWeekConverterTest.java"/><files fileName="/trunk/projects/absence-domain/src/test/java/com/fineos/absence/entitlement/eligibility/engine/rules/minhoursworkedrule/DaysConverterTest.java"/><files fileName="/trunk/projects/absence-domain/src/test/java/com/fineos/absence/entitlement/eligibility/engine/rules/minhoursworkedrule/MonthsConverterTest.java"/><files fileName="/trunk/projects/absence-domain/src/test/java/com/fineos/absence/entitlement/eligibility/engine/rules/minhoursworkedrule/WeeksConverterTest.java"/><files fileName="/trunk/projects/absence-domain/src/test/java/com/fineos/absence/entitlement/eligibility/engine/rules/minhoursworkedrule/WorkWeekConverterTest.java"/><files fileName="/trunk/projects/absence-domain/src/test/java/com/fineos/absence/entitlement/eligibility/engine/rules/minhoursworkedrule/YearsConverterTest.java"/></timeLineEntries><timeLineEntries revision="5"><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/entitlement/eligibility/engine/rules/MinimumHoursWorkedEligibilityRule.java"><comments author="Trevor Higgins" comment="No test update?"/><comments author="Hiren Rana" comment="New testcase is created"/></files></timeLineEntries><timeLineEntries revision="6"><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/entitlement/eligibility/engine/rules/MinimumHoursWorkedEligibilityRule.java"/></timeLineEntries><timeLineEntries revision="7"><files fileName="/trunk/projects/absence-domain/src/test/java/com/fineos/absence/entitlement/eligibility/engine/rules/MinimumHoursWorkedEligibilityRuleTest.java"/></timeLineEntries></timeline></reviewTimeLines><reviewTimeLines lastActivityDate="2017-05-18T00:00:00Z" reviewNum="3" summary="FAB-3644"><timeline><timeLineEntries revision="1"><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/serviceagreement/servicesdefinition/paidleaveplanelectives/PaidLeavePlanPaymentServiceLevelService.java"/><files fileName="/trunk/projects/absence-domain/src/test/java/com/fineos/absence/serviceagreement/servicesdefinition/paidleaveplanelectives/PaidLeavePlanPaymentServiceLevelServiceTest.java"/></timeLineEntries></timeline></reviewTimeLines><reviewTimeLines lastActivityDate="2017-05-23T00:00:00Z" reviewNum="2" summary="FAB-3764 Converter modified to use decimal values in calculation"><timeline><timeLineEntries revision="1"><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/entitlement/eligibility/engine/converter/DaysConverter.java"><comments author="Mahendra Dash" comment="We could have made changes in the interface that takes directly BigDecimal/Double instead of doing a cast to double. &#xA;&#xA;But, again as long as the application(Eligibility tab) allows only int/long to be feed as value for planSpecifiedWorkedWithinBasisValue, we are safe to define the interface to take only long and return long.&#xA;&#xA;However we might have thought of doing rounding on the value before we return the long. Not sure if that has any big significance.&#xA;&#xA;This review comment is a complemenatry info in support of how and why we did it this way. &#xA;So, you can drop this comment if needed."/><comments author="Hiren Rana" comment="Since the UI accepts long value interface accepts long value as param which is correct.&#xA;So it is better to cast at converter level."/></files><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/entitlement/eligibility/engine/converter/MonthsConverter.java"/><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/entitlement/eligibility/engine/converter/WeeksConverter.java"/><files fileName="/trunk/projects/absence-domain/src/main/java/com/fineos/absence/entitlement/eligibility/engine/converter/YearsConverter.java"/><files fileName="/trunk/projects/absence-domain/src/test/java/com/fineos/absence/entitlement/eligibility/engine/converter/DaysConverterTest.java"/><files fileName="/trunk/projects/absence-domain/src/test/java/com/fineos/absence/entitlement/eligibility/engine/converter/MonthsConverterTest.java"/><files fileName="/trunk/projects/absence-domain/src/test/java/com/fineos/absence/entitlement/eligibility/engine/converter/WeeksConverterTest.java"/><files fileName="/trunk/projects/absence-domain/src/test/java/com/fineos/absence/entitlement/eligibility/engine/converter/YearsConverterTest.java"/></timeLineEntries></timeline></reviewTimeLines></timeLineOwners></timeLines>